
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


$custom-teal-palette: (
  50: #EAF1F1,
  100: #CBDDDD,
  200: #A8C6C6,
  300: #85AFAF,
  400: #6B9D9D,
  500: #518C8C,
  600: #4A8484,
  700: #407979,
  800: #376F6F,
  900: #275C5C,
  A100: #A2FFFF,
  A200: #6FFFFF,
  A300: #3CFFFF,
  A400: #23FFFF,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A300: rgba(black, 0.87),
    A400: rgba(black, 0.87)
  )
);

$custom-red-palette: (
  50: #F4E4E6,
  100: #E4BCC0,
  200: #D39096,
  300: #C1646B,
  400: #B3424C,
  500: #A6212C,
  600: #9E1D27,
  700: #951821,
  800: #8B141B,
  900: #7B0B10,
  A100: #FFACAE,
  A200: #FF797D,
  A300: #FF464B,
  A400: #FF2C32,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A300: white,
    A400: white
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$FerengiFin-primary: mat.define-palette($custom-teal-palette, 500);
$FerengiFin-accent: mat.define-palette($custom-red-palette, 500, A100, A400);

// The warn palette is optional (defaults to red).
$FerengiFin-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$FerengiFin-theme: mat.define-dark-theme((
  color: (
    primary: $FerengiFin-primary,
    accent: $FerengiFin-accent,
    warn: $FerengiFin-warn,
  )
));

$FerengiFin-light-theme: mat.define-light-theme((
  color: (
    primary: $FerengiFin-primary,
    accent: $FerengiFin-accent,
    warn: $FerengiFin-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($FerengiFin-light-theme);

.dark-theme {
  @include mat.all-component-themes($FerengiFin-theme);
}

/* You can add global styles to this file, and also import other style files */